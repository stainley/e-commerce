version: '3.8'
services:

  ## API GATEWAY
  api_gateway:
    container_name: api_gateway
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    build:
      context: api-gateway/
      dockerfile: Dockerfile
      args:
        service_version: 0.0.1
    deploy:
      resources:
        limits:
          memory: 200m
    ports:
      - '8080:8080'
    depends_on:
      - product
      - user
    networks:
      - e-comerce

  ## USER SERVICE
  user:
    container_name: user
    build:
      context: user-service/
      dockerfile: Dockerfile
      args:
        build: 1
    deploy:
      resources:
        limits:
          memory: 250m
        reservations:
          memory: 200m
    ports:
      - '8090:8090'
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - dbuser
    networks:
      - e-comerce

  product:
    container_name: product
    build:
      context: product-service/
      dockerfile: Dockerfile
      args:
        service_version: 0.0.1
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - '8070:8070'
    deploy:
      resources:
        limits:
          memory: 200m
    depends_on:
      - product_postgres
    networks:
      - e-comerce

  # MESSAGE DISTRIBUTION SYSTEM
  #kafka_server:
  #  image: kafkaconnect/k8s-operator

  ## DATABASE
  product_postgres:
    container_name: product_postgres
    image: postgres:14.3-alpine
    restart: always
    deploy:
      resources:
        limits:
          memory: 100m
    ports:
      - '5432:5432'
    networks:
      - e-comerce
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=product
      - SCHEMA=e-commerce
    volumes:
      - postgres-data:/var/lib/postgresql/data
  dbuser:
    container_name: user_db
    image: mongo
    ports:
      - '27017:27017'
    networks:
      - e-comerce
    volumes:
      - data:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass

  invetorydb:
    container_name: inventoty_db
    image: mongo
    ports:
      - '27016:27017'
    networks:
      - e-comerce
    volumes:
      - data:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
  #mongo-express:
  #  image: mongo-express
  #  container_name: mongo_express
  #  restart: always
  #  networks:
  #    - e-comerce
  #  ports:
  #    - "8081:8081"
  #  environment:
  #    - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
  #    - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
  #    - ME_CONFIG_MONGODB_SERVER=mongodb
  #keycloak:
  #  image: quay.io/keycloak/keycloak:18.0.0-legacy
  #  environment:
  #    - KEYCLOAK_USER=keycloak
  #    - KEYCLOAK_PASSWORD=keycloak
  #    - DB_VENDOR=h2
  #    - JAVA_OPTS=-Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singlefile -Dkeycloak.migration.file=/temp/keycloak-dump.json
  #  volumes:
  #    - type: bind
  #      source: ./tmp/keycloak-dump.json
  #      target: /temp/keycloak-dump.json
  #      read_only: true
  #  ports:
  #    - "8888:8080"

volumes:
  data: { }
  postgres-data:
    driver: local

networks:
  e-comerce:
    name: e-commerce
